{{- $app := printf "%s-postgres" .Values.resource.name -}}
{{- $spec := dict }}
{{- $_ := merge $spec .Values.resource.spec .Values.default -}}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ $app }}
  labels:
    app: {{ $app }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ $app }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.resource.name }}
      resource: {{ $app }}
  template:
    metadata:
      labels:
        app: {{ .Values.resource.name }}
        resource: {{ $app }}
    spec:
{{- if $spec.nodeSelector }}
      nodeSelector:
{{ toYaml $spec.nodeSelector | indent 8 }}
{{ end -}}
{{- if $spec.tolerations }}
      tolerations:
{{ toYaml $spec.tolerations | indent 8 }}
{{ end }}
      volumes:
        - name: initdb
          configMap:
            name: {{ $app }}
            items:
            - key: initdb
              path: provision.sh
              mode: 0777
      containers:
        - name: server
{{- with $spec.image }}
          image: {{ .name }}:{{ .tag }}
          imagePullPolicy: {{ .pullPolicy }}{{ end }}
          ports:
            - name: {{ $spec.service.name }}
              containerPort: {{ $spec.service.port }}
          envFrom:
            - secretRef:
                name: {{ $app }}
          volumeMounts:
            - name: database
              mountPath: /var/lib/postgresql/data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
  volumeClaimTemplates:
    - metadata:
        name: database
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ $spec.storage.size }}
{{ if $spec.storage.class }}
        storageClassName: {{ $spec.storage.class }}
{{ end }}
